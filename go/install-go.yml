---
- name: Install and Configure Go
  hosts: all
  become: true
  vars:
    go_tmp_dir: "/tmp/go-install-{{ ansible_date_time.epoch }}"
    go_install_dir: "/usr/local"

  tasks:
    - name: Detect CPU architecture
      set_fact:
        go_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' if ansible_architecture == 'aarch64' else 'unsupported' }}"

    - name: Fail if architecture is unsupported
      fail:
        msg: "Unsupported architecture: {{ ansible_architecture }}"
      when: go_arch == 'unsupported'

    - name: Check if Go is already installed
      command: go version
      register: go_version_check
      ignore_errors: true
      changed_when: false

    - name: Get latest Go version
      uri:
        url: https://go.dev/VERSION?m=text
        return_content: yes
      register: latest_go_version

    - name: Set Go version fact
      set_fact:
        go_version: "{{ latest_go_version.content | regex_replace('\\n', '') }}"
        current_version: "{{ go_version_check.stdout | regex_search('go[0-9.]+') | default('none') }}"

    - name: Create temporary directory
      file:
        path: "{{ go_tmp_dir }}"
        state: directory
        mode: "0755"

    - name: Download and install Go
      block:
        - name: Download Go
          get_url:
            url: "https://go.dev/dl/{{ go_version }}.linux-{{ go_arch }}.tar.gz"
            dest: "{{ go_tmp_dir }}/go.tar.gz"
          when: current_version != go_version

        - name: Remove existing Go installation
          file:
            path: "{{ go_install_dir }}/go"
            state: absent
          when: current_version != go_version

        - name: Extract Go
          unarchive:
            src: "{{ go_tmp_dir }}/go.tar.gz"
            dest: "{{ go_install_dir }}"
            remote_src: yes
          when: current_version != go_version

      always:
        - name: Clean up temporary directory
          file:
            path: "{{ go_tmp_dir }}"
            state: absent

    - name: Set up environment variables in /etc/profile.d
      copy:
        dest: /etc/profile.d/go.sh
        content: |
          export PATH=$PATH:/usr/local/go/bin
          export GOPATH=$HOME/go
          export PATH=$PATH:$GOPATH/bin
        mode: "0644"

    - name: Create GOPATH directory
      file:
        path: "{{ ansible_env.HOME }}/go"
        state: directory
        mode: "0755"
        owner: "{{ ansible_user_id }}"
      become: false

    - name: Verify Go installation
      command: /usr/local/go/bin/go version
      register: go_verify
      changed_when: false

    - name: Display Go version
      debug:
        msg: "Go {{ go_verify.stdout }} has been installed successfully"
